import { createNS } from '@ontologies/core';

const teamGL = createNS('http://glapp.nl/tgl#');

export default {
    ns: teamGL,

    /* classes */
    Address: teamGL('Address'),
    Badge: teamGL('Badge'),
    ContactedAction: teamGL('ContactedAction'),
    DashboardPage: teamGL('DashboardPage'),
    Department: teamGL('Department'),
    EarnedBadge: teamGL('EarnedBadge'),
    Event: teamGL('Event'),
    GlappHome: teamGL('GlappHome'),
    GlappStart: teamGL('GlappStart'),
    Group: teamGL('Group'),
    NewVolunteer: teamGL('NewVolunteer'),
    NotAvailableAction: teamGL('NotAvailableAction'),
    Participant: teamGL('Participant'),
    PostalCode: teamGL('PostalCode'),
    PotentialParticipant: teamGL('PotentialParticipant'),
    SignUpAction: teamGL('SignUpAction'),
    Street: teamGL('Street'),
    TargetProgress: teamGL('TargetProgress'),
    TryAgainAction: teamGL('TryAgainAction'),
    UnsubscribeAction: teamGL('UnsubscribeAction'),
    User: teamGL('User'),
    Volunteer: teamGL('Volunteer'),

    /* properties */
    active: teamGL('active'),
    activeFlyered: teamGL('activeFlyered'),
    activeVolunteersCount: teamGL('activeVolunteersCount'),
    address: teamGL('address'),
    badge: teamGL('badge'),
    current: teamGL('current'),
    dashboard: teamGL('dashboard'),
    department: teamGL('department'),
    departmentMemberships: teamGL('departmentMemberships'),
    departments: teamGL('departments'),
    desiredCount: teamGL('desiredCount'),
    didVote: teamGL('didVote'),
    doors: teamGL('doors'),
    engagement: teamGL('engagement'),
    events: teamGL('events'),
    flyer: teamGL('flyer'),
    flyerVolunteers: teamGL('flyerVolunteers'),
    fullAddress: teamGL('fullAddress'),
    futureEventsCount: teamGL('futureEventsCount'),
    glappUsedAt: teamGL('glappUsedAt'),
    groups: teamGL('groups'),
    groupsCount: teamGL('groupsCount'),
    inactiveVolunteersCount: teamGL('inactiveVolunteersCount'),
    maxPriority: teamGL('maxPriority'),
    meanPriority: teamGL('meanPriority'),
    memberships: teamGL('memberships'),
    minPriority: teamGL('minPriority'),
    newVolunteersCount: teamGL('newVolunteersCount'),
    newsletter: teamGL('newsletter'),
    participants: teamGL('participants'),
    participantsCount: teamGL('participantsCount'),
    pendingAddresses: teamGL('pendingAddresses'),
    postalDigits: teamGL('postalDigits'),
    postalRangeType: teamGL('postalRangeType'),
    postalRanges: teamGL('postalRanges'),
    potentialParticipants: teamGL('potentialParticipants'),
    priority: teamGL('priority'),
    remarks: teamGL('remarks'),
    result: teamGL('result'),
    street: teamGL('street'),
    streets: teamGL('streets'),
    subDepartments: teamGL('subDepartments'),
    target: teamGL('target'),
    telephone: teamGL('telephone'),
    totalFlyers: teamGL('totalFlyers'),
    user: teamGL('user'),
    veryActiveVolunteersCount: teamGL('veryActiveVolunteersCount'),
    volunteer: teamGL('volunteer'),
    volunteers: teamGL('volunteers'),
    volunteersCount: teamGL('volunteersCount'),
};

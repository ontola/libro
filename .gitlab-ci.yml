stages:
  - test
  - bake
  - release
  - deploy

after_script:
  - docker rm ${CI_BUILD_ID}
  - docker rm registry.gitlab.com/argu/aod_demo:${CI_BUILD_REF_NAME}

test:
  stage: test
  before_script:
    - npm i -g yarn
    - yarn install
    - npm rebuild node-sass
  script:
    - yarn run lint
    - yarn run lint:style
    - yarn run test
    - yarn run build:bundle
    - yarn run build:server
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - node_modules/
      - .happypack/
      - yarn.lock
  artifacts:
    paths:
    - dist/

bake:
  stage: bake
  after_script:
    - docker stop ${CI_BUILD_ID}
  script:
    - docker build --pull=true -t registry.gitlab.com/argu/aod_demo:${CI_BUILD_REF_NAME} .
    - docker run --name ${CI_BUILD_ID} -d registry.gitlab.com/argu/aod_demo:${CI_BUILD_REF_NAME}

tag:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push registry.gitlab.com/argu/aod_demo:${CI_BUILD_REF_NAME}

latest:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker tag registry.gitlab.com/argu/aod_demo:${CI_BUILD_REF_NAME} registry.gitlab.com/argu/aod_demo:latest
    - docker push registry.gitlab.com/argu/aod_demo:latest
  only:
    - master

deploy:
  stage: deploy
  script:
    - curl -X POST $DEPLOYMENT_HOOK
  only:
    - tags

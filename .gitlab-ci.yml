image: node:14

cache:
  key: $CI_PROJECT_ID
  paths:
    - .yarn/cache

default:
  before_script:
    - yarn --immutable
    - yarn run t10s:compile

stages:
  - build
  - manualTag
  - devProxy
  - bake
  - tag

build:
  stage: build
  script:
    - yarn run build:bundle
    - yarn run build:shared
  artifacts:
    paths:
      - dist

codeQuality:
  stage: build
  script:
    - yarn run lint:code
    - yarn run t10s:lint

test:
  stage: build
  script:
    - ./node_modules/.bin/jest --coverage --coverageReporters="text-summary" --no-cache
  coverage: '/Lines.+\d+.\d+%/'

bake:
  stage: bake
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  dependencies:
    - build
  script:
    - apk add git
    - git describe --always > ./client_version.txt
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest --build-arg RAILS_ENV=production --build-arg NODE_ENV=production .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

productionTagManual:
  stage: manualTag
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:production
    - docker push $CI_REGISTRY_IMAGE:production
  when: manual

stagingTagManual:
  stage: manualTag
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:staging
    - docker push $CI_REGISTRY_IMAGE:staging
  when: manual

autoTagProduction:
  stage: tag
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:production
    - docker push $CI_REGISTRY_IMAGE:production
  only:
    - master

autoTagStaging:
  stage: tag
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:staging
    - docker push $CI_REGISTRY_IMAGE:staging
  only:
    - develop

productionDevProxy:
  stage: devProxy
  before_script:
    - ''
  script:
    - eval $PRODUCTION_PIPELINE_TRIGGER
  when: manual

stagingDevProxy:
  stage: devProxy
  before_script:
    - ''
  script:
    - eval $STAGING_PIPELINE_TRIGGER
  when: manual
